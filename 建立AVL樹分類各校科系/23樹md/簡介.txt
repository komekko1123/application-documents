任務一:建立2-3樹
方法:使用vector來存三個指標的，當每讀到一筆資料就做SearchPath走到要走的位置。並把路徑用stack存起來，把
資料放入後，去看在那裡如果放完後此葉只有兩個item或是相同的值那就結束了，如果有三個item就要做split來分開
樹葉的值，我們可以用stack存的路徑追朔到一路上的父節點來看split，如果指到的父節點沒有滿的話代表不用再分裂
了，普通的分裂下把中間的值移上去，再依情況把右指標去接分裂後的節點，如果節點上去的地方在加入節點後滿了，
那就要持續地繼續分裂，直到不需分裂為止即可結束。


任務二:建立AVL樹
方法:作法類似二元搜索樹，都是用遞迴依大小去放入節點，不同的是需要做旋轉，由於有遞迴的特
性，所以放完節點後會一路向上往回從父節點到根部節點，而要不要旋轉的依據是看當下節點的
BF值(平衡係數 = 左子樹高 - 右子樹高)，如果BF值大於等於2或小於等於-2就要做旋轉，至於是
哪個旋轉要看子節點的BF值，旋轉完後即可拿到平衡的二元樹。


發現:這次的兩題的難度來看有蠻大的差距，AVL樹由於之前有寫過二元搜索樹，所以很寫起來很輕鬆，至於2-3樹的
話，不同於普通二元樹需要用到三個指標，比較難的部分是分裂這個過程，要考慮分裂的地方是葉子而是非葉子，由於
是用到三個指標，要改變指向的方向，這時如果沒有注意到的話，會像寫組合語言那樣Segmentation fault，這樣要
Debug時，其實還蠻難抓的。


影片連結:https://youtu.be/oE3X_AGTllo